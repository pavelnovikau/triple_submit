// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentLanguage = 'en'; // –¢–µ–∫—É—â–∏–π —è–∑—ã–∫
let currentSettings = {}; // –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
let hasChanges = false; // –§–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

// –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–µ–º—É
function applyTheme() {
  console.log('applyTheme: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã');
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é
  const savedTheme = localStorage.getItem('theme');
  const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
  
  let theme = 'light';
  
  if (savedTheme) {
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Ç–µ–º–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–µ
    theme = savedTheme;
  } else if (prefersDarkMode) {
    // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ç–µ–º—ã, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ –≤ —Ç–µ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
    theme = 'dark';
  }
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
  document.body.setAttribute('data-theme', theme);
  console.log('applyTheme: –¢–µ–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞:', theme);
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

// –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ —Å–ø–∏—Å–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
function logDomainLists() {
  chrome.storage.sync.get('settings', (data) => {
    if (data.settings) {
      console.group('üìã –¢–µ–∫—É—â–∏–µ —Å–ø–∏—Å–∫–∏ –¥–æ–º–µ–Ω–æ–≤:');
      console.log('–†–µ–∂–∏–º:', data.settings.domainMode || 'whitelist');
      console.log('–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫:', data.settings.whitelist || []);
      console.log('–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫:', data.settings.blacklist || []);
      console.groupEnd();
    } else {
      console.warn('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');
    }
  });
}

function initOptions() {
  console.log('%c[initOptions] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫', 'font-weight: bold; color: blue;');
  
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('%c[DEBUG] DOM —Å—Ç–∞—Ç—É—Å:', 'color: purple;');
  console.log('domain-list-container:', document.querySelector('.domain-list-container'));
  console.log('domain-list:', document.getElementById('domain-list'));
  console.log('domain-list-title:', document.getElementById('domain-list-title'));
  
  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–µ —Å–ø–∏—Å–∫–∏ –¥–æ–º–µ–Ω–æ–≤
  logDomainLists();
  
  // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  localStorage.setItem('showTestData', 'true');
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π storage, —á—Ç–æ–±—ã –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
  chrome.storage.onChanged.addListener((changes, namespace) => {
    console.log('%c[Storage –∏–∑–º–µ–Ω–µ–Ω–æ]', 'color: orange;', changes);
    
    // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –ª–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–æ–º–µ–Ω–∞—Ö
    if (changes.settings && namespace === 'sync') {
      const oldSettings = changes.settings.oldValue || {};
      const newSettings = changes.settings.newValue || {};
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–∞—Ö –¥–æ–º–µ–Ω–æ–≤
      if (JSON.stringify(oldSettings.whitelist) !== JSON.stringify(newSettings.whitelist) ||
          JSON.stringify(oldSettings.blacklist) !== JSON.stringify(newSettings.blacklist) ||
          oldSettings.domainMode !== newSettings.domainMode) {
        console.log('%c[–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–∞—Ö –¥–æ–º–µ–Ω–æ–≤]', 'color: green;');
        logDomainLists();
      }
      
      // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è —è–∑—ã–∫, –æ–±–Ω–æ–≤–ª—è–µ–º UI
      if (newSettings.language && newSettings.language !== currentLanguage) {
        console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —è–∑—ã–∫–∞:', newSettings.language);
        currentLanguage = newSettings.language;
        updateLanguageUI(currentLanguage);
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ UI
      currentSettings = newSettings;
      updateUI(currentSettings);
    }
    
    // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è —è–∑—ã–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏, –æ–±–Ω–æ–≤–ª—è–µ–º UI
    if (changes.language && namespace === 'sync') {
      const newLanguage = changes.language.newValue;
      console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —è–∑—ã–∫–∞:', newLanguage);
      
      if (newLanguage && newLanguage !== currentLanguage) {
        currentLanguage = newLanguage;
        updateLanguageUI(currentLanguage);
      }
    }
  });
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
  applyTheme();
  
  // –§–æ—Ä—Å–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  setTimeout(() => {
    const domainList = document.getElementById('domain-list');
    const domainListContainer = document.querySelector('.domain-list-container');
    
    if (domainList) {
      domainList.style.display = 'block';
      domainList.style.minHeight = '150px';
      domainList.style.border = '2px solid red'; // –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–∞–º–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('%c[–§–æ—Ä—Å–∏—Ä—É—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤]', 'color: green;');
    }
    
    if (domainListContainer) {
      domainListContainer.style.display = 'block';
      domainListContainer.style.minHeight = '250px';
      console.log('%c[–§–æ—Ä—Å–∏—Ä—É—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤]', 'color: green;');
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–∏–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω –≤ —Å–ø–∏—Å–æ–∫
    if (domainList && localStorage.getItem('showTestData') === 'true') {
      console.log('%c[–î–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω]', 'color: green;');
      
      const testDomains = ['example.com', 'test-domain.com'];
      populateDomainList(testDomains);
    }
  }, 500);
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  chrome.storage.sync.get(['language', 'settings'], (data) => {
    console.log('initOptions: –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ storage:', data);
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å—å language
    let detectedLanguage = null;
    
    if (data.language) {
      console.log('initOptions: –Ø–∑—ã–∫ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏:', data.language);
      detectedLanguage = data.language;
    } 
    // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
    else if (data.settings && data.settings.language) {
      console.log('initOptions: –Ø–∑—ã–∫ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö:', data.settings.language);
      detectedLanguage = data.settings.language;
    }
    
    if (detectedLanguage) {
      currentLanguage = detectedLanguage;
      console.log('initOptions: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —è–∑—ã–∫ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:', currentLanguage);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å —É—á–µ—Ç–æ–º —è–∑—ã–∫–∞
      updateLanguageUI(currentLanguage);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —è–∑—ã–∫–∞
      loadSettings();
    } else {
      // –ï—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
      TripleSubmitConfig.getLanguage().then(lang => {
        console.log('initOptions: –ü–æ–ª—É—á–µ–Ω —è–∑—ã–∫ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', lang);
        currentLanguage = lang;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateLanguageUI(currentLanguage);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —è–∑—ã–∫–∞
        loadSettings();
      }).catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —è–∑—ã–∫–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        loadSettings();
      });
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
  document.getElementById('language-button').addEventListener('click', showLanguageMenu);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
  initDomainList();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  attachEventListeners();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤
function initDomainList() {
  console.log('initDomainList: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤');
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤
  const domainListContainer = document.querySelector('.domain-list-container');
  if (domainListContainer) {
    domainListContainer.style.minHeight = '200px';
    console.log('initDomainList: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞');
  }
  
  const domainList = document.getElementById('domain-list');
  if (domainList) {
    // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–Ω
    domainList.style.display = 'block';
    domainList.style.minHeight = '150px';
    domainList.style.maxHeight = '300px';
    domainList.style.overflowY = 'auto';
    console.log('initDomainList: –û–±–Ω–æ–≤–ª–µ–Ω—ã —Å—Ç–∏–ª–∏ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω, –ø—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    chrome.storage.sync.get('domainList', (data) => {
      const domains = data.domainList || [];
      console.log('initDomainList: –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –∏–∑ storage:', domains);
      
      // –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –¥–æ–±–∞–≤–∏–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω
      if (domains.length === 0) {
        console.log('initDomainList: –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω');
        const testDomains = ['example.com', 'test-domain.com'];
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–æ–º–µ–Ω—ã –≤ UI
        populateDomainList(testDomains);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–ª–∞–≥ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        if (localStorage.getItem('showTestData') === 'true') {
          chrome.storage.sync.set({ domainList: testDomains });
        }
      } else {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–º–µ–Ω—ã, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö
        populateDomainList(domains);
      }
    });
  }
}

// –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
async function changeLanguage(lang) {
  try {
    console.log('changeLanguage: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞:', lang);
    
    if (!lang || lang === currentLanguage) {
      console.log('changeLanguage: –Ø–∑—ã–∫ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω');
      return;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —è–∑—ã–∫ –ø—Ä—è–º–æ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
    await chrome.storage.sync.set({ language: lang });
    console.log('changeLanguage: –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å—å');
    
    // –¢–∞–∫–∂–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫ —á–µ—Ä–µ–∑ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    await TripleSubmitConfig.setLanguage(lang);
    console.log('changeLanguage: –Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –≤ –æ–ø—Ü–∏—è—Ö
    currentLanguage = lang;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç lang —É HTML
    document.documentElement.lang = lang;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —è–∑—ã–∫–∞
    updateLanguageUI(lang);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
    updateStatusMessage(chrome.i18n.getMessage('language_changed') || '–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω', true);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —è–∑—ã–∫ –∏ —Ç–∞–º —Ç–æ–∂–µ
    try {
      const data = await chrome.storage.sync.get('settings');
      if (data.settings) {
        const updatedSettings = {...data.settings, language: lang};
        await chrome.storage.sync.set({ settings: updatedSettings });
        console.log('changeLanguage: –Ø–∑—ã–∫ —Ç–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        currentSettings = updatedSettings;
      }
    } catch (settingsError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —è–∑—ã–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö:', settingsError);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    hasChanges = true;
    updateSaveButton();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —è–∑—ã–∫–∞:', error);
    updateStatusMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —è–∑—ã–∫–∞', false);
  }
}

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç UI
async function loadSettings() {
  console.log('loadSettings: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
  try {
    const data = await chrome.storage.sync.get('settings');
    
    if (data.settings) {
      console.log('loadSettings: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:', data.settings);
      currentSettings = data.settings;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º UI –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
      updateUI(currentSettings);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
      loadDomainsFromSettings(currentSettings);
    } else {
      console.log('loadSettings: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      getDefaultSettings().then(defaults => {
        currentSettings = defaults;
        updateUI(currentSettings);
        loadDomainsFromSettings(currentSettings);
      });
    }
  } catch (error) {
    console.error('loadSettings: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    updateStatusMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫', false);
  }
}

// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–æ–º–µ–Ω—ã –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ (–±–µ–ª—ã–π/—á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫)
function loadDomainsFromSettings(settings) {
  console.log('loadDomainsFromSettings: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  if (!settings) {
    console.error('loadDomainsFromSettings: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã');
    return;
  }
  
  let domains = [];
  
  // –†–µ–∂–∏–º –±–µ–ª–æ–≥–æ –∏–ª–∏ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
  const domainMode = settings.domainMode || 'whitelist';
  
  // –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–ø–∏—Å–æ–∫
  if (domainMode === 'whitelist') {
    if (settings.whitelist && Array.isArray(settings.whitelist)) {
      domains = settings.whitelist;
      console.log('loadDomainsFromSettings: –ó–∞–≥—Ä—É–∂–µ–Ω –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫:', domains);
    } else if (settings.blacklistMode === false && Array.isArray(settings.whitelist)) {
      // –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º
      domains = settings.whitelist;
      console.log('loadDomainsFromSettings: –ó–∞–≥—Ä—É–∂–µ–Ω –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç):', domains);
    }
  } else {
    if (settings.blacklist && Array.isArray(settings.blacklist)) {
      domains = settings.blacklist;
      console.log('loadDomainsFromSettings: –ó–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫:', domains);
    } else if (settings.blacklistMode === true && Array.isArray(settings.blacklist)) {
      // –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º
      domains = settings.blacklist;
      console.log('loadDomainsFromSettings: –ó–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç):', domains);
    }
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º UI
  populateDomainList(domains);
}

// –ó–∞–ø–æ–ª–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
function populateDomainList(domains) {
  console.log('populateDomainList: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤:', domains);
  const domainList = document.getElementById('domain-list');
  
  if (!domainList) {
    console.error('populateDomainList: –≠–ª–µ–º–µ–Ω—Ç #domain-list –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    return;
  }
  
  // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–Ω
  domainList.style.display = 'block';
  
  // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫
  domainList.innerHTML = '';
  
  if (!domains || domains.length === 0) {
    // –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    console.log('populateDomainList: –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ');
    const emptyMessage = document.createElement('div');
    emptyMessage.className = 'empty-domain-message';
    emptyMessage.textContent = chrome.i18n.getMessage('domain_list_empty') || '–°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –ø—É—Å—Ç';
    domainList.appendChild(emptyMessage);
    
    // –î–æ–±–∞–≤–∏–º —è–≤–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
    if (localStorage.getItem('showTestData') === 'true') {
      console.log('populateDomainList: –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      
      setTimeout(() => {
        const testItem = document.createElement('div');
        testItem.className = 'domain-item';
        testItem.innerHTML = `
          <span class="domain-text">example.com (—Ç–µ—Å—Ç–æ–≤—ã–π, –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω)</span>
          <button class="remove-domain-button" title="–£–¥–∞–ª–∏—Ç—å –¥–æ–º–µ–Ω">&times;</button>
        `;
        domainList.appendChild(testItem);
        
        testItem.querySelector('.remove-domain-button').addEventListener('click', () => {
          testItem.remove();
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–Ω–æ–≤–∞, –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ —Ç–µ–ø–µ—Ä—å –ø—É—Å—Ç
          if (domainList.children.length === 0) {
            domainList.appendChild(emptyMessage);
          }
        });
      }, 1000); // –î–æ–±–∞–≤–ª—è–µ–º —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
    }
    
    return;
  }
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–∞–º–∏
  domains.forEach(domain => {
    const domainItem = document.createElement('div');
    domainItem.className = 'domain-item';
    
    const domainText = document.createElement('span');
    domainText.className = 'domain-text';
    domainText.textContent = domain;
    
    const removeButton = document.createElement('button');
    removeButton.className = 'remove-domain-button';
    removeButton.innerHTML = '&times;';
    removeButton.title = chrome.i18n.getMessage('remove_domain') || '–£–¥–∞–ª–∏—Ç—å –¥–æ–º–µ–Ω';
    
    removeButton.addEventListener('click', () => {
      removeDomain(domain);
    });
    
    domainItem.appendChild(domainText);
    domainItem.appendChild(removeButton);
    domainList.appendChild(domainItem);
  });
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ø–∏—Å–∫–∞
  const domainListTitle = document.getElementById('domain-list-title');
  if (domainListTitle) {
    const listMode = document.getElementById('domain-mode-select').value;
    domainListTitle.textContent = 
      listMode === 'whitelist' 
        ? (chrome.i18n.getMessage('whitelist') || '–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫') 
        : (chrome.i18n.getMessage('blacklist') || '–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞
async function addDomain() {
  const domainInput = document.getElementById('domain-input');
  const domain = domainInput.value.trim();
  
  if (!domain) {
    updateStatusMessage(chrome.i18n.getMessage('empty_domain') || '–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω', false);
    return;
  }
  
  try {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ø–∏—Å–∫–æ–º
    const domainMode = document.getElementById('domain-mode-select').value;
    const currentList = domainMode === 'whitelist' ? 'whitelist' : 'blacklist';
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const data = await chrome.storage.sync.get('settings');
    let settings = data.settings || await getDefaultSettings();
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!Array.isArray(settings[currentList])) {
      settings[currentList] = [];
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –¥–æ–º–µ–Ω
    if (settings[currentList].includes(domain)) {
      updateStatusMessage(chrome.i18n.getMessage('domain_exists') || '–î–æ–º–µ–Ω —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω', false);
      return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–º–µ–Ω –≤ —Å–ø–∏—Å–æ–∫
    settings[currentList].push(domain);
    settings.domainMode = domainMode; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    await chrome.storage.sync.set({ settings });
    console.log(`–î–æ–º–µ–Ω ${domain} –¥–æ–±–∞–≤–ª–µ–Ω –≤ ${currentList}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    currentSettings = settings;
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    domainInput.value = '';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    loadDomainsFromSettings(settings);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    updateStatusMessage(chrome.i18n.getMessage('domain_added') || '–î–æ–º–µ–Ω –¥–æ–±–∞–≤–ª–µ–Ω', true);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    hasChanges = true;
    updateSaveButton();
  } catch (error) {
    console.error('addDomain: –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–æ–º–µ–Ω–∞:', error);
    updateStatusMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–æ–º–µ–Ω–∞', false);
  }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
async function removeDomain(domain) {
  console.log('removeDomain: –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞:', domain);
  try {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ø–∏—Å–∫–æ–º
    const domainMode = document.getElementById('domain-mode-select').value;
    const currentList = domainMode === 'whitelist' ? 'whitelist' : 'blacklist';
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const data = await chrome.storage.sync.get('settings');
    let settings = data.settings || await getDefaultSettings();
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!Array.isArray(settings[currentList])) {
      settings[currentList] = [];
      console.warn(`–°–ø–∏—Å–æ–∫ ${currentList} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫`);
      return;
    }
    
    // –£–¥–∞–ª—è–µ–º –¥–æ–º–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞
    settings[currentList] = settings[currentList].filter(d => d !== domain);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    await chrome.storage.sync.set({ settings });
    console.log(`–î–æ–º–µ–Ω ${domain} —É–¥–∞–ª–µ–Ω –∏–∑ ${currentList}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    currentSettings = settings;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    loadDomainsFromSettings(settings);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    updateStatusMessage(chrome.i18n.getMessage('domain_removed') || '–î–æ–º–µ–Ω —É–¥–∞–ª–µ–Ω', true);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    hasChanges = true;
    updateSaveButton();
  } catch (error) {
    console.error('removeDomain: –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–æ–º–µ–Ω–∞:', error);
    updateStatusMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–æ–º–µ–Ω–∞', false);
  }
}

// –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
function updateStatusMessage(message, isSuccess = true) {
  const statusMessageEl = document.getElementById('status-message');
  if (!statusMessageEl) return;
  
  console.log(`updateStatusMessage: ${isSuccess ? '–£—Å–ø–µ—Ö' : '–û—à–∏–±–∫–∞'}: ${message}`);
  
  statusMessageEl.textContent = message;
  statusMessageEl.className = `status-message ${isSuccess ? 'status-success' : 'status-error'}`;
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    statusMessageEl.textContent = '';
    statusMessageEl.className = 'status-message';
  }, 3000);
}

// –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
function updateSaveButton() {
  const saveButton = document.getElementById('save-button');
  if (!saveButton) return;
  
  console.log('updateSaveButton: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, hasChanges:', hasChanges);
  
  if (hasChanges) {
    saveButton.classList.add('has-changes');
    saveButton.disabled = false;
  } else {
    saveButton.classList.remove('has-changes');
    saveButton.disabled = true;
  }
}

// –û–±–Ω–æ–≤–ª—è–µ—Ç UI –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —è–∑—ã–∫–æ–º
function updateLanguageUI(lang) {
  console.log('updateLanguageUI: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è —è–∑—ã–∫–∞:', lang);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç lang —É HTML
  document.documentElement.lang = lang;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –≤—Å–µ—Ö –ø–µ—Ä–µ–≤–æ–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  // –ó–¥–µ—Å—å –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å chrome.i18n –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
  
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏
  document.querySelector('h1').textContent = chrome.i18n.getMessage('extName') || 'Triple Submit';
  document.querySelectorAll('h2').forEach(h2 => {
    const key = h2.textContent.toLowerCase().replace(/\s+/g, '_');
    const translation = chrome.i18n.getMessage(key);
    if (translation) h2.textContent = translation;
  });
  
  // –ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
  document.getElementById('language-button').title = chrome.i18n.getMessage('language_select') || '–í—ã–±–æ—Ä —è–∑—ã–∫–∞';
  document.getElementById('light-theme-button').title = chrome.i18n.getMessage('light_theme') || '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞';
  document.getElementById('dark-theme-button').title = chrome.i18n.getMessage('dark_theme') || '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞';
  
  // –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —Å–±—Ä–æ—Å–∞
  document.getElementById('save-button').textContent = chrome.i18n.getMessage('save_changes') || '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';
  document.getElementById('reset-button').textContent = chrome.i18n.getMessage('reset_settings') || '–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏';
  
  // –†–µ–∂–∏–º—ã —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤
  const domainModeSelect = document.getElementById('domain-mode-select');
  if (domainModeSelect) {
    const options = domainModeSelect.options;
    for (let i = 0; i < options.length; i++) {
      const option = options[i];
      const key = option.value === 'whitelist' ? 'whitelist_description' : 'blacklist_description';
      const translation = chrome.i18n.getMessage(key);
      if (translation) option.textContent = translation;
    }
  }
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤
  const listMode = domainModeSelect ? domainModeSelect.value : 'whitelist';
  const domainListTitle = document.getElementById('domain-list-title');
  if (domainListTitle) {
    domainListTitle.textContent = 
      listMode === 'whitelist' 
        ? (chrome.i18n.getMessage('whitelist') || '–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫') 
        : (chrome.i18n.getMessage('blacklist') || '–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫');
  }
  
  // –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è –≤–≤–æ–¥–∞ –¥–æ–º–µ–Ω–∞
  const domainInput = document.getElementById('domain-input');
  if (domainInput) {
    domainInput.placeholder = chrome.i18n.getMessage('domain_placeholder') || 'example.com';
  }
  
  // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–º–µ–Ω–∞
  const addDomainButton = document.getElementById('add-domain-button');
  if (addDomainButton) {
    addDomainButton.textContent = chrome.i18n.getMessage('add_domain') || '–î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–µ–Ω';
  }
  
  // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ø—Ä–µ–º–∏—É–º
  const upgradeButton = document.getElementById('upgrade-button');
  if (upgradeButton) {
    upgradeButton.textContent = chrome.i18n.getMessage('upgrade_premium') || '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ü—Ä–µ–º–∏—É–º';
  }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
function showLanguageMenu() {
  console.log('showLanguageMenu: –ü–æ–∫–∞–∑ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–µ–Ω—é
  let languageMenu = document.getElementById('language-menu');
  
  // –ï—Å–ª–∏ –º–µ–Ω—é —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –µ–≥–æ –≤–∏–¥–∏–º–æ—Å—Ç—å
  if (languageMenu) {
    languageMenu.style.display = languageMenu.style.display === 'none' ? 'block' : 'none';
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é
  languageMenu = document.createElement('div');
  languageMenu.id = 'language-menu';
  languageMenu.className = 'language-menu';
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤ –∏ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
  const supportedLanguages = TripleSubmitConfig.getSupportedLanguages();
  const languageNames = TripleSubmitConfig.getLanguageNames();
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
  supportedLanguages.forEach(lang => {
    const menuItem = document.createElement('div');
    menuItem.className = `language-menu-item ${lang === currentLanguage ? 'active' : ''}`;
    menuItem.dataset.lang = lang;
    menuItem.textContent = languageNames[lang] || lang;
    
    // –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ø—É–Ω–∫—Ç –º–µ–Ω—é –º–µ–Ω—è–µ–º —è–∑—ã–∫ –∏ —Å–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
    menuItem.addEventListener('click', () => {
      if (lang !== currentLanguage) {
        changeLanguage(lang);
      }
      languageMenu.style.display = 'none';
    });
    
    languageMenu.appendChild(menuItem);
  });
  
  // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–µ–Ω—é —Ä—è–¥–æ–º —Å –∫–Ω–æ–ø–∫–æ–π –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
  const languageButton = document.getElementById('language-button');
  const rect = languageButton.getBoundingClientRect();
  
  // –î–æ–±–∞–≤–ª—è–µ–º –º–µ–Ω—é –≤ DOM
  document.body.appendChild(languageMenu);
  
  // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–µ–Ω—é
  languageMenu.style.position = 'absolute';
  languageMenu.style.top = `${rect.bottom + window.scrollY}px`;
  languageMenu.style.left = `${rect.left + window.scrollX}px`;
  languageMenu.style.zIndex = '1000';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
  document.addEventListener('click', function closeMenu(e) {
    if (!languageMenu.contains(e.target) && e.target !== languageButton) {
      languageMenu.style.display = 'none';
      document.removeEventListener('click', closeMenu);
    }
  });
}

// –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º UI
function attachEventListeners() {
  console.log('attachEventListeners: –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π');
  
  // –ö–Ω–æ–ø–∫–∏ —Ç–µ–º—ã
  document.getElementById('light-theme-button').addEventListener('click', () => {
    document.body.setAttribute('data-theme', 'light');
    localStorage.setItem('theme', 'light');
  });
  
  document.getElementById('dark-theme-button').addEventListener('click', () => {
    document.body.setAttribute('data-theme', 'dark');
    localStorage.setItem('theme', 'dark');
  });
  
  // –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  document.getElementById('save-button').addEventListener('click', saveSettings);
  
  // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞
  document.getElementById('reset-button').addEventListener('click', resetSettings);
  
  // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
  document.getElementById('extension-toggle').addEventListener('change', function() {
    hasChanges = true;
    updateSaveButton();
  });
  
  // –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
  document.getElementById('mode-select').addEventListener('change', function() {
    const mode = this.value;
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
    document.querySelectorAll('.mode-description').forEach(desc => {
      desc.style.display = 'none';
    });
    
    document.getElementById(`${mode}-mode-description`).style.display = 'block';
    
    hasChanges = true;
    updateSaveButton();
  });
  
  // –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞–∂–∞—Ç–∏–π
  document.getElementById('decrease-count').addEventListener('click', function() {
    const countInput = document.getElementById('press-count');
    const count = parseInt(countInput.value);
    if (count > 1) {
      countInput.value = count - 1;
      hasChanges = true;
      updateSaveButton();
    }
  });
  
  document.getElementById('increase-count').addEventListener('click', function() {
    const countInput = document.getElementById('press-count');
    const count = parseInt(countInput.value);
    if (count < 5) {
      countInput.value = count + 1;
      hasChanges = true;
      updateSaveButton();
    }
  });
  
  document.getElementById('press-count').addEventListener('change', function() {
    hasChanges = true;
    updateSaveButton();
  });
  
  // –ö–æ–Ω—Ç—Ä–æ–ª—å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞
  document.getElementById('time-window').addEventListener('change', function() {
    hasChanges = true;
    updateSaveButton();
  });
  
  // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∏–∑—É–∞–ª—å–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
  document.getElementById('feedback-toggle').addEventListener('change', function() {
    hasChanges = true;
    updateSaveButton();
  });
  
  // –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤
  document.getElementById('domain-mode-select').addEventListener('change', function() {
    const listMode = this.value;
    document.getElementById('domain-list-title').textContent = 
      listMode === 'whitelist' 
        ? (chrome.i18n.getMessage('whitelist') || '–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫') 
        : (chrome.i18n.getMessage('blacklist') || '–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫');
    
    hasChanges = true;
    updateSaveButton();
  });
  
  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞
  document.getElementById('add-domain-button').addEventListener('click', addDomain);
  
  // –í–≤–æ–¥ –¥–æ–º–µ–Ω–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (Enter)
  document.getElementById('domain-input').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      addDomain();
    }
  });
}

// –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
async function resetSettings() {
  console.log('resetSettings: –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫');
  
  if (confirm(chrome.i18n.getMessage('confirm_reset') || '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?')) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      const defaultSettings = await getDefaultSettings();
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      await chrome.storage.sync.set({ settings: defaultSettings });
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
      await chrome.storage.sync.set({ domainList: [] });
      
      // –û–±–Ω–æ–≤–ª—è–µ–º UI
      currentSettings = defaultSettings;
      updateUI(currentSettings);
      populateDomainList([]);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      updateStatusMessage(chrome.i18n.getMessage('settings_reset') || '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã', true);
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
      hasChanges = false;
      updateSaveButton();
    } catch (error) {
      console.error('resetSettings: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      updateStatusMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫', false);
    }
  }
}

// –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
async function getDefaultSettings() {
  console.log('getDefaultSettings: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
  
  const defaultSettings = {
    enabled: true,
    mode: 'normal',
    pressCount: 3,
    timeWindow: 200,
    visualFeedback: true,
    domainMode: 'whitelist',  // –†–µ–∂–∏–º —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤ (whitelist –∏–ª–∏ blacklist)
    whitelist: [],            // –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
    blacklist: [],            // –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
    language: await TripleSubmitConfig.getLanguage(),
    theme: 'light',
    isPremium: false
  };
  
  console.log('getDefaultSettings: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', defaultSettings);
  return defaultSettings;
}

// –û–±–Ω–æ–≤–ª—è–µ—Ç UI –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
function updateUI(settings) {
  console.log('updateUI: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', settings);
  
  if (!settings) {
    console.error('updateUI: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã');
    return;
  }
  
  // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
  const extensionToggle = document.getElementById('extension-toggle');
  if (extensionToggle) {
    extensionToggle.checked = settings.enabled !== false; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
  }
  
  // –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
  const modeSelect = document.getElementById('mode-select');
  if (modeSelect) {
    modeSelect.value = settings.mode || 'normal';
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
    document.querySelectorAll('.mode-description').forEach(desc => {
      desc.style.display = 'none';
    });
    
    const modeDescription = document.getElementById(`${settings.mode || 'normal'}-mode-description`);
    if (modeDescription) {
      modeDescription.style.display = 'block';
    }
  }
  
  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–∂–∞—Ç–∏–π
  const pressCount = document.getElementById('press-count');
  if (pressCount) {
    pressCount.value = settings.pressCount || 3;
  }
  
  // –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ
  const timeWindow = document.getElementById('time-window');
  if (timeWindow) {
    timeWindow.value = settings.timeWindow || 200;
  }
  
  // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
  const feedbackToggle = document.getElementById('feedback-toggle');
  if (feedbackToggle) {
    feedbackToggle.checked = settings.visualFeedback !== false; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
  }
  
  // –†–µ–∂–∏–º —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤
  const domainModeSelect = document.getElementById('domain-mode-select');
  if (domainModeSelect) {
    // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∫ –Ω–æ–≤–æ–≥–æ (domainMode), —Ç–∞–∫ –∏ —Å—Ç–∞—Ä–æ–≥–æ (blacklistMode) —Ñ–æ—Ä–º–∞—Ç–∞
    let domainMode = 'whitelist';
    
    if (settings.domainMode) {
      // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
      domainMode = settings.domainMode;
    } else if (settings.blacklistMode !== undefined) {
      // –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç
      domainMode = settings.blacklistMode ? 'blacklist' : 'whitelist';
    }
    
    domainModeSelect.value = domainMode;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ø–∏—Å–∫–∞ –¥–æ–º–µ–Ω–æ–≤
    const domainListTitle = document.getElementById('domain-list-title');
    if (domainListTitle) {
      domainListTitle.textContent = 
        domainMode === 'whitelist' 
          ? (chrome.i18n.getMessage('whitelist') || '–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫') 
          : (chrome.i18n.getMessage('blacklist') || '–ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫');
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
    loadDomainsFromSettings(settings);
  }
  
  // –°—Ç–∞—Ç—É—Å Premium
  updatePremiumUI(settings.isPremium);
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
  hasChanges = false;
  updateSaveButton();
}

// –û–±–Ω–æ–≤–ª—è–µ—Ç UI –¥–ª—è Premium
function updatePremiumUI(isPremium) {
  console.log('updatePremiumUI: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Premium UI, isPremium:', isPremium);
  
  const premiumCard = document.querySelector('.premium-card');
  const upgradeButton = document.getElementById('upgrade-button');
  
  if (isPremium) {
    if (premiumCard) {
      premiumCard.classList.add('is-premium');
    }
    
    if (upgradeButton) {
      upgradeButton.textContent = chrome.i18n.getMessage('premium_status') || 'Premium –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω';
      upgradeButton.disabled = true;
    }
  } else {
    if (premiumCard) {
      premiumCard.classList.remove('is-premium');
    }
    
    if (upgradeButton) {
      upgradeButton.textContent = chrome.i18n.getMessage('upgrade_premium') || '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ Premium';
      upgradeButton.disabled = false;
    }
  }
}

// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
async function saveSettings() {
  console.log('saveSettings: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—è
    const data = await chrome.storage.sync.get('settings');
    let settings = data.settings || await getDefaultSettings();
    
    // –°–æ–±–∏—Ä–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ UI
    const newSettings = {
      enabled: document.getElementById('extension-toggle').checked,
      mode: document.getElementById('mode-select').value,
      pressCount: parseInt(document.getElementById('press-count').value),
      timeWindow: parseInt(document.getElementById('time-window').value),
      visualFeedback: document.getElementById('feedback-toggle').checked,
      domainMode: document.getElementById('domain-mode-select').value,
      language: currentLanguage,
      isPremium: settings.isPremium || false
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–∫–∏ –¥–æ–º–µ–Ω–æ–≤ –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Ñ–æ—Ä–º–µ
    if (settings.whitelist) newSettings.whitelist = settings.whitelist;
    if (settings.blacklist) newSettings.blacklist = settings.blacklist;
    
    // –ï—Å–ª–∏ —Å–ø–∏—Å–∫–æ–≤ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ
    if (!Array.isArray(newSettings.whitelist)) newSettings.whitelist = [];
    if (!Array.isArray(newSettings.blacklist)) newSettings.blacklist = [];
    
    console.log('saveSettings: –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', newSettings);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    await chrome.storage.sync.set({ settings: newSettings });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    currentSettings = newSettings;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    updateStatusMessage(chrome.i18n.getMessage('settings_saved') || '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', true);
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    hasChanges = false;
    updateSaveButton();
  } catch (error) {
    console.error('saveSettings: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    updateStatusMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫', false);
  }
}

// Initialize on DOM load
document.addEventListener('DOMContentLoaded', initOptions);